#!/bin/sh
# shellcheck disable=SC2064

# pblocks - modular status bar for dwm and other wm's

usage() {
    printf "pblocks: modular status bar for dwm and other wm's

Options:
  -c    specify path to the configuration file
  -d    delimeter to separate modules
  -s    output bar content to stdout instead of setting X root window name to it
  -h    print this help message
  -v    print version information

See pblocks(1) for documentation"
}

error() {
    printf "%s\\nUse \`pblocks -h\` for help\\n" "$1" >&2
    exit 1
}

config="${XDG_CONFIG_HOME:-$HOME/.config}/pblocks/pblocksrc"
delim=" "
displaycommand="xsetroot -name"

while getopts ":vhc:d:s" OPT; do case "$OPT" in
    v) printf "pblocks-VERSION\\n" ; exit 0 ;;
    h) usage ; exit 0 ;;
    c) config="$OPTARG" ;;
    d) delim="$OPTARG" ;;
    s) displaycommand='printf "%s\\n"' ;;
    \?) error "Invalid option: '$OPTARG'" ;;
esac done

[ ! -f "$config" ] && error "No such file: '$config'"

display() { eval "$displaycommand \"$bar\"" ;}

temp="$(mktemp /tmp/pblocks.XXX)"
trap "rm -f \"$temp\" ; exit 0" HUP INT QUIT TERM PWR EXIT
grep -v -e'^#' -e'^[\s\t]*$' "$config" > "$temp"

bar=""
sec=0
while :; do
    [ $sec -ne 0 ] && sleep 1 &
    wait && {
        id=0
        while read -r icon interval signal command; do
            if [ $sec -eq 0 ]; then
                eval "update$id() { block$id=\$(setsid -f $command) ;}"
                [ "$interval" -eq 0 ] && update$id && display

                bar="${bar:+$bar$delim}${icon}\${block$id}"

                trap "update$id && display" "RTMIN+$signal"
            fi
            # update block if seconds divide by interval
            [ "$interval" -ne 0 ] && [ $((sec % interval)) -eq 0 ] && update$id && display
            id=$((id + 1))
        done < "$temp"
        sec=$((sec + 1))
    }
done
