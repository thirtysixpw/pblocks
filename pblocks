#!/bin/sh

# pblocks - modular status bar for dwm and other wm's

usage() {
    cat <<EOF
pblocks: modular status bar for dwm and other wm's

Options:
  -c    specify path to the configuration file
  -d    delimeter to separate modules
  -s    output bar content to stdout instead of setting X root window name to it
  -h    print synopsis and options, then exit
  -v    print version information, then exit

See pblocks(1) for documentation
EOF
}

error() { printf "%s\\nUse \`pblocks -h\` for help\\n" "$1" >&2 && exit 1 ;}

config="${XDG_CONFIG_HOME:-$HOME/.config}/pblocks/config"
delim=" "
displaycommand="xsetroot -name"

while getopts "vhc:d:s" o; do case "$o" in
    v) printf "pblocks-VERSION\\n" && exit 0 ;;
    h) usage && exit 0 ;;
    c) config="$OPTARG" ;;
    d) delim="$OPTARG" ;;
    s) displaycommand="printf '%s\\n'" ;;
    *) error ;;
esac done

[ ! -f "$config" ] && error "$config: no such file"

display() { eval "$displaycommand \"$bar\"" ;}

temp="$(mktemp /tmp/XXX.pblocks)"
trap 'rm -f $temp ; return' HUP INT QUIT TERM PWR EXIT
grep -v -e'^#' -e'^[\s\t]*$' "$config" > "$temp"

bar=""
sec=0
while :; do
    [ $sec -ne 0 ] && sleep 1 &
    wait && {
        id=0
        while read -r icon interval signal command; do
            if [ $sec -eq 0 ]; then
                eval "update$id() { block$id=\$(setsid -f $command) ;}"
                [ "$interval" -eq 0 ]  && "update$id" && display

                bar="${bar:+$bar$delim}${icon}\${block$id}"

                # shellcheck disable=SC2064
                trap "update$id && display" "RTMIN+$signal"
            fi
            # update block if seconds divide by interval
            [ "$interval" -ne 0 ] && [ $((sec % interval)) -eq 0 ] && update$id && display
            id=$((id + 1))
        done < "$temp"
        sec=$((sec + 1))
    }
done
